[33mcommit edcb2752bbabbc37e6e03752bd9c8989b5eb7920[m
Author: Sasha Ocheev <OcheevSasha@gmail.com>
Date:   Sun Dec 13 16:46:20 2015 +0300

    viewer version 1

[1mdiff --git a/disp.cpp b/disp.cpp[m
[1mnew file mode 100644[m
[1mindex 0000000..2521971[m
[1m--- /dev/null[m
[1m+++ b/disp.cpp[m
[36m@@ -0,0 +1,86 @@[m
[32m+[m[32m#include <SFML/Graphics.hpp>[m
[32m+[m[32m#include "disp.h"[m
[32m+[m[32m#include <iostream>[m
[32m+[m[32m#include <stdio.h>[m
[32m+[m[32m#include <stdlib.h>[m
[32m+[m[32m#include <string>[m
[32m+[m
[32m+[m[32musing namespace sf;[m
[32m+[m
[32m+[m[32mTexture getTexture(std::string name) {[m
[32m+[m	[32mTexture but_texture;[m
[32m+[m	[32mbut_texture.loadFromFile(name);[m
[32m+[m	[32mreturn but_texture;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfloat getScale(Vector2f img_size, Vector2f app_size) {[m
[32m+[m	[32mif (img_size.x > app_size.x || img_size.y > app_size.y) {[m
[32m+[m		[32mVector2f ratio = { app_size.x / img_size.x, app_size.y / img_size.y };[m
[32m+[m		[32mreturn (ratio.x < ratio.y) ? ratio.x : ratio.y;[m
[32m+[m	[32m}[m
[32m+[m	[32mreturn 1.f;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfloat checkExtremeCenter(float center, float app_size, float img_size, float scale) {[m
[32m+[m	[32mfloat temp1 = app_size / 2;[m
[32m+[m	[32mcenter = (center < temp1) ? temp1 : center;[m
[32m+[m	[32mfloat temp2 = img_size * scale - temp1;[m
[32m+[m	[32mcenter = (center > temp2) ? temp2 : center;[m
[32m+[m	[32mreturn center;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfloat getExtremeCenter(float img_center, float app_size, float img_size, float scale) {[m
[32m+[m	[32mif (img_size * scale > app_size)[m
[32m+[m		[32mreturn checkExtremeCenter(img_center, app_size, img_size, scale);[m
[32m+[m	[32melse[m
[32m+[m		[32mreturn scale * img_size / 2;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mint drawImage(Texture &texture, RenderWindow& app, bool is_not_scale, float &scale, Vector2i move, Vector2f &img_center) {[m
[32m+[m
[32m+[m	[32mVector2f app_size = Vector2f(app.getSize());[m
[32m+[m	[32mVector2f img_size = Vector2f(texture.getSize());[m
[32m+[m	[32mif (app_size.x < min_app_size)[m
[32m+[m		[32mapp_size.x = min_app_size;[m
[32m+[m	[32mif (app_size.y < min_app_size)[m
[32m+[m		[32mapp_size.y = min_app_size;[m
[32m+[m	[32mapp.setSize(Vector2u(app_size));[m
[32m+[m
[32m+[m	[32mSprite sprite;[m
[32m+[m	[32msprite.setTexture(texture);[m
[32m+[m
[32m+[m	[32mif (is_not_scale)[m
[32m+[m		[32mscale = getScale(img_size, app_size);[m
[32m+[m
[32m+[m	[32msprite.scale(scale, scale);[m
[32m+[m
[32m+[m	[32mimg_center.x += move.x;[m
[32m+[m	[32mimg_center.y += move.y;[m
[32m+[m
[32m+[m	[32mimg_center.x = getExtremeCenter(img_center.x, app_size.x, img_size.x, scale);[m
[32m+[m	[32mimg_center.y = getExtremeCenter(img_center.y, app_size.y, img_size.y, scale);[m
[32m+[m
[32m+[m	[32mFloatRect rect = { Vector2f({ 0, 0 }), app_size };[m
[32m+[m	[32mView view(rect);[m
[32m+[m	[32mview.setCenter(img_center);[m
[32m+[m	[32mapp.setView(view);[m
[32m+[m
[32m+[m	[32msprite.setPosition(0, 0);[m
[32m+[m
[32m+[m	[32mapp.draw(sprite);[m
[32m+[m
[32m+[m	[32mreturn 0;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mvoid drawButton(RenderWindow &app, Texture txtr, Vector2i img_start, Vector2i img_size, Vector2f app_pos) {[m
[32m+[m	[32mSprite sprt;[m
[32m+[m	[32msprt.setTexture(txtr);[m
[32m+[m	[32msprt.setTextureRect(IntRect(img_start, img_size));[m
[32m+[m
[32m+[m	[32mView view(FloatRect(0.f, 0.f, float(app.getSize().x), float(app.getSize().y)));[m
[32m+[m	[32mapp.setView(view);[m
[32m+[m
[32m+[m	[32msprt.setPosition(app_pos);[m
[32m+[m
[32m+[m	[32mapp.draw(sprt);[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/disp.h b/disp.h[m
[1mnew file mode 100644[m
[1mindex 0000000..c6f2006[m
[1m--- /dev/null[m
[1m+++ b/disp.h[m
[36m@@ -0,0 +1,41 @@[m
[32m+[m[32musing namespace sf;[m
[32m+[m[32musing namespace std;[m
[32m+[m
[32m+[m[32mconst int but_size = 50;[m
[32m+[m[32mconst int but_count = 4;[m
[32m+[m[32mconst float min_app_size = 500;[m
[32m+[m
[32m+[m[32mconst int scale_count = 8;[m
[32m+[m
[32m+[m[32mconst string but_file = "images/buttons2.png";[m
[32m+[m
[32m+[m[32mstruct button {[m
[32m+[m	[32mTexture texture;[m
[32m+[m	[32mVector2i start;[m
[32m+[m	[32mVector2i size;[m
[32m+[m	[32mVector2f pos;[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mstruct Zoom {[m
[32m+[m[32mfloat modes[scale_count] = { 1, 1.5, 2, 2.5, 3, 4, 6, 8 };[m
[32m+[m[32mint number = 0;[m
[32m+[m[32mbool is_not_scaled = true;[m
[32m+[m[32mfloat scale = 1.f;[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mstruct Img {[m
[32m+[m	[32mVector2f center;[m
[32m+[m	[32mTexture texture;[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mTexture getTexture(std::string name);[m
[32m+[m
[32m+[m[32mstruct Interface {[m
[32m+[m	[32mbutton left = { getTexture(but_file), Vector2i({ 0, 0 }), Vector2i({ but_size, but_size }), Vector2f({ 0, 0 }) };[m
[32m+[m	[32mbutton right = { getTexture(but_file), Vector2i({ but_size, 0 }), Vector2i({ but_size, but_size }), Vector2f({ 0, 0 }) };[m
[32m+[m	[32mbutton minus = { getTexture(but_file), Vector2i({ but_size * 2, 0 }), Vector2i({ but_size, but_size }), Vector2f({ 0, 0 }) };[m
[32m+[m	[32mbutton plus = { getTexture(but_file), Vector2i({ but_size * 3, 0 }), Vector2i({ but_size, but_size }), Vector2f({ 0, 0 }) };[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mvoid drawButton(RenderWindow &app, Texture txtr, Vector2i img_start, Vector2i img_size, Vector2f app_pos);[m
[32m+[m[32mint drawImage(Texture &txtr, RenderWindow &app, bool is_not_scale, float &scale, Vector2i move, Vector2f &img_center);[m
\ No newline at end of file[m
[1mdiff --git a/files.cpp b/files.cpp[m
[1mnew file mode 100644[m
[1mindex 0000000..d844458[m
[1m--- /dev/null[m
[1m+++ b/files.cpp[m
[36m@@ -0,0 +1,32 @@[m
[32m+[m[32m#include <string>[m
[32m+[m[32m#include <vector>[m
[32m+[m[32m#include <windows.h>[m[41m [m
[32m+[m[32m#include "files.h"[m
[32m+[m
[32m+[m[32musing namespace std;[m
[32m+[m
[32m+[m[32mint getFilesList(string mask, vector <string>  &files)[m
[32m+[m[32m{[m
[32m+[m	[32mHANDLE h_find;[m
[32m+[m	[32mWIN32_FIND_DATA find_data;[m
[32m+[m
[32m+[m	[32m// Look for first[m
[32m+[m	[32mh_find = FindFirstFile(mask.c_str(), &find_data);[m
[32m+[m	[32mif (h_find != INVALID_HANDLE_VALUE) {[m
[32m+[m		[32mdo {[m
[32m+[m			[32mfiles.push_back(find_data.cFileName);[m
[32m+[m		[32m} while (FindNextFile(h_find, &find_data));[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mFindClose(h_find);[m
[32m+[m
[32m+[m	[32mreturn 0;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mvoid getFormFilesList(Files &files) {[m
[32m+[m	[32mfor (int i = 0; i < files.formats.size(); ++i) {[m
[32m+[m		[32mchar dir_temp[] = "";[m
[32m+[m		[32mstring mask = files.dir_name;[m
[32m+[m		[32mgetFilesList(mask.append("*.").append(files.formats[i]), files.list);[m
[32m+[m	[32m}[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/files.h b/files.h[m
[1mnew file mode 100644[m
[1mindex 0000000..6f783dd[m
[1m--- /dev/null[m
[1m+++ b/files.h[m
[36m@@ -0,0 +1,13 @@[m
[32m+[m[32musing namespace std;[m
[32m+[m
[32m+[m[32mconst string error_file = "images/error.png";[m
[32m+[m
[32m+[m[32mstruct Files {[m
[32m+[m	[32mvector <string> list;[m
[32m+[m	[32mvector <string> formats = { "jpg", "bmp", "png" };[m
[32m+[m	[32mstring dir_name = "D:/images/";[m
[32m+[m	[32mint number = 0;[m
[32m+[m	[32mbool can_get_next = true;[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mvoid getFormFilesList(Files &files);[m
\ No newline at end of file[m
[1mdiff --git a/images/buttons2.png b/images/buttons2.png[m
[1mnew file mode 100644[m
[1mindex 0000000..c747b36[m
Binary files /dev/null and b/images/buttons2.png differ
[1mdiff --git a/images/buttons3.png b/images/buttons3.png[m
[1mnew file mode 100644[m
[1mindex 0000000..34bd1b0[m
Binary files /dev/null and b/images/buttons3.png differ
[1mdiff --git a/images/error.png b/images/error.png[m
[1mnew file mode 100644[m
[1mindex 0000000..c778a98[m
Binary files /dev/null and b/images/error.png differ
[1mdiff --git a/init.cpp b/init.cpp[m
[1mnew file mode 100644[m
[1mindex 0000000..e4d2ba9[m
[1m--- /dev/null[m
[1m+++ b/init.cpp[m
[36m@@ -0,0 +1,97 @@[m
[32m+[m[32m#include <SFML/Graphics.hpp>[m
[32m+[m[32m#include <string>[m
[32m+[m[32m#include <vector>[m
[32m+[m[32m#include <windows.h>[m[41m [m
[32m+[m
[32m+[m[32m#include "disp.h"[m
[32m+[m[32m#include "files.h"[m
[32m+[m[32m#include "init.h"[m
[32m+[m[32m;[m
[32m+[m[32musing namespace std;[m
[32m+[m[32musing namespace sf;[m
[32m+[m
[32m+[m[32mvoid setNextFile(Files &files, Texture &texture, RenderWindow &window, string error_file) {[m
[32m+[m	[32mif (files.can_get_next) {[m
[32m+[m		[32mstring file_name = files.dir_name;[m
[32m+[m		[32mfile_name.append(files.list[files.number]);[m
[32m+[m		[32mif (!texture.loadFromFile(file_name))[m
[32m+[m			[32mtexture.loadFromFile(error_file);[m
[32m+[m		[32mfiles.can_get_next = false;[m
[32m+[m		[32mwindow.setTitle(files.list[files.number]);[m
[32m+[m	[32m}[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mVector2i getMove(Mouse_struct &mouse, RenderWindow &window) {[m
[32m+[m	[32mVector2i move = { 0, 0 };[m
[32m+[m	[32mif (mouse.is_clicked) {[m
[32m+[m		[32mmouse.pos = mouse.new_pos;[m
[32m+[m		[32mmouse.new_pos = Mouse::getPosition(window);[m
[32m+[m		[32mmove = Vector2i({ mouse.pos.x - mouse.new_pos.x, mouse.pos.y - mouse.new_pos.y });[m
[32m+[m	[32m}[m
[32m+[m	[32mif (mouse.is_released) {[m
[32m+[m		[32mmouse.is_released = false;[m
[32m+[m		[32mmouse.is_clicked = false;[m
[32m+[m	[32m}[m
[32m+[m	[32mreturn move;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mvoid initZoom(Zoom &zoom, int inc, Vector2f &img_center) {[m
[32m+[m	[32mfloat t = zoom.modes[zoom.number + inc] / zoom.modes[zoom.number];[m
[32m+[m	[32mzoom.number += inc;[m
[32m+[m	[32mimg_center.x *= t;[m
[32m+[m	[32mimg_center.y *= t;[m
[32m+[m	[32mzoom.scale *= t;[m
[32m+[m	[32mzoom.is_not_scaled = zoom.number == 0;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mvoid initNextFile(bool &next_file, float &scale, int &file_number, int inc) {[m
[32m+[m	[32mfile_number += inc;[m
[32m+[m	[32mscale = 1.f;[m
[32m+[m	[32mnext_file = true;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mbool isInRect(Vector2i el_coor, Vector2f rect_coor, Vector2i rect_size) {[m
[32m+[m	[32mreturn (el_coor.x >= rect_coor.x && el_coor.y >= rect_coor.y &&[m
[32m+[m		[32mel_coor.x <= rect_coor.x + rect_size.x && el_coor.y <= rect_coor.y + rect_size.y);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mvoid setButton(button &but, RenderWindow &window, Vector2f pos_on_display) {[m
[32m+[m	[32mbut.pos = pos_on_display;[m
[32m+[m	[32mdrawButton(window, but.texture, but.start, but.size, but.pos);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mvoid setInterface(Interface &intface, RenderWindow &window) {[m
[32m+[m	[32mVector2f app_size = Vector2f(window.getSize());[m
[32m+[m	[32msetButton(intface.left, window, Vector2f({ 0, app_size.y - but_size }));[m
[32m+[m	[32msetButton(intface.right, window, Vector2f({ float(but_size), app_size.y - but_size }));[m
[32m+[m	[32msetButton(intface.minus, window, Vector2f({ app_size.x - 2 * but_size, app_size.y - but_size }));[m
[32m+[m	[32msetButton(intface.plus, window, Vector2f({ app_size.x - but_size, app_size.y - but_size }));[m
[32m+[m[32m}[m
[32m+[m
[32m+[m
[32m+[m[32mvoid setEvent(RenderWindow &window, Mouse_struct &mouse, Interface &intface, Zoom &zoom, Files &files, Img &img) {[m
[32m+[m	[32mEvent event;[m
[32m+[m	[32mwhile (window.pollEvent(event)) {[m
[32m+[m		[32mif (event.type == Event::MouseButtonPressed)[m
[32m+[m			[32mif (event.key.code == Mouse::Left) {[m
[32m+[m				[32mmouse.is_clicked = true;[m
[32m+[m				[32mmouse.pos = mouse.new_pos = Mouse::getPosition(window);[m
[32m+[m			[32m}[m
[32m+[m		[32mif (event.type == Event::MouseButtonReleased)[m
[32m+[m			[32mif (event.key.code == Mouse::Left)[m
[32m+[m				[32mmouse.is_released = true;[m
[32m+[m		[32mif (event.type == Event::KeyPressed || mouse.is_released) {[m
[32m+[m			[32mif ((event.key.code == Keyboard::Add || isInRect(mouse.new_pos, intface.plus.pos, intface.plus.size)) && zoom.number < scale_count - 1)[m
[32m+[m				[32minitZoom(zoom, 1, img.center);[m
[32m+[m			[32melse if ((event.key.code == Keyboard::Subtract || isInRect(mouse.new_pos, intface.minus.pos, intface.minus.size)) && zoom.number > 0)[m
[32m+[m				[32minitZoom(zoom, -1, img.center);[m
[32m+[m			[32melse if (zoom.is_not_scaled)[m
[32m+[m				[32mif ((event.key.code == Keyboard::Left || isInRect(mouse.new_pos, intface.left.pos, intface.left.size)) && files.number > 0)[m
[32m+[m					[32minitNextFile(files.can_get_next, zoom.scale, files.number, -1);[m
[32m+[m				[32melse if ((event.key.code == Keyboard::Right || isInRect(mouse.new_pos, intface.right.pos, intface.right.size)) && files.number < files.list.size() - 1)[m
[32m+[m					[32minitNextFile(files.can_get_next, zoom.scale, files.number, 1);[m
[32m+[m		[32m}[m
[32m+[m		[32mif (event.type == Event::Closed)[m
[32m+[m			[32mwindow.close();[m
[32m+[m	[32m}[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/init.h b/init.h[m
[1mnew file mode 100644[m
[1mindex 0000000..1f67dce[m
[1m--- /dev/null[m
[1m+++ b/init.h[m
[36m@@ -0,0 +1,26 @@[m
[32m+[m[32musing namespace std;[m
[32m+[m[32musing namespace sf;[m
[32m+[m
[32m+[m[32mstruct Mouse_struct {[m
[32m+[m	[32mVector2i pos = { 0, 0 };[m
[32m+[m	[32mVector2i new_pos = { 0, 0 };[m
[32m+[m	[32mbool is_clicked = false;[m
[32m+[m	[32mbool is_released = false;[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mstruct Init {[m
[32m+[m	[32mImg img;[m
[32m+[m	[32mMouse_struct mouse;[m
[32m+[m	[32mZoom zoom;[m
[32m+[m	[32mFiles files;[m
[32m+[m	[32mInterface intface;[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mvoid setNextFile(Files &files, Texture &texture, RenderWindow &window, string error_file);[m
[32m+[m[32mVector2i getMove(Mouse_struct &mouse, RenderWindow &window);[m
[32m+[m[32mvoid initZoom(Zoom &zoom, int inc, Vector2f &img_center);[m
[32m+[m[32mvoid initNextFile(bool &next_file, float &scale, int &file_number, int inc);[m
[32m+[m[32mbool isInRect(Vector2i el_coor, Vector2f rect_coor, Vector2i rect_size);[m
[32m+[m[32mvoid setButton(button &but, RenderWindow &window, Vector2f pos_on_display);[m
[32m+[m[32mvoid setInterface(Interface &intface, RenderWindow &window);[m
[32m+[m[32mvoid setEvent(RenderWindow &window, Mouse_struct &mouse, Interface &intface, Zoom &zoom, Files &files, Img &img);[m
\ No newline at end of file[m
[1mdiff --git a/main.cpp b/main.cpp[m
[1mnew file mode 100644[m
[1mindex 0000000..e9c548a[m
[1m--- /dev/null[m
[1m+++ b/main.cpp[m
[36m@@ -0,0 +1,36 @@[m
[32m+[m[32m#include <SFML/Graphics.hpp>[m
[32m+[m[32m#include <iostream>[m
[32m+[m[32m#include <time.h>[m
[32m+[m[32m#include <stdio.h>[m
[32m+[m[32m#include <stdlib.h>[m
[32m+[m[32m#include <string>[m
[32m+[m[32m#include <vector>[m
[32m+[m[32m#include <windows.h>[m[41m [m
[32m+[m
[32m+[m[32m#include "files.h"[m
[32m+[m[32m#include "disp.h"[m
[32m+[m[32m#include "init.h"[m
[32m+[m
[32m+[m[32musing namespace sf;[m
[32m+[m[32musing namespace std;[m
[32m+[m
[32m+[m[32mint main() {[m
[32m+[m
[32m+[m	[32mInit init;[m
[32m+[m	[32mgetFormFilesList(init.files);[m
[32m+[m	[32mRenderWindow window(VideoMode(600, 600), "view");[m
[32m+[m
[32m+[m	[32mwhile (window.isOpen()) {[m
[32m+[m		[32msetEvent(window, init.mouse, init.intface, init.zoom, init.files, init.img);[m
[32m+[m
[32m+[m		[32mwindow.clear();[m
[32m+[m
[32m+[m		[32msetNextFile(init.files, init.img.texture, window, error_file);[m
[32m+[m		[32mdrawImage(init.img.texture, window, init.zoom.is_not_scaled, init.zoom.scale, getMove(init.mouse, window), init.img.center);[m
[32m+[m		[32msetInterface(init.intface, window);[m
[32m+[m
[32m+[m		[32mwindow.display();[m
[32m+[m
[32m+[m	[32m}[m
[32m+[m	[32mreturn 0;[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/viewer.vcxproj b/viewer.vcxproj[m
[1mnew file mode 100644[m
[1mindex 0000000..05db764[m
[1m--- /dev/null[m
[1m+++ b/viewer.vcxproj[m
[36m@@ -0,0 +1,140 @@[m
[32m+[m[32m﻿<?xml version="1.0" encoding="utf-8"?>[m
[32m+[m[32m<Project DefaultTargets="Build" ToolsVersion="14.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">[m
[32m+[m[32m  <ItemGroup Label="ProjectConfigurations">[m
[32m+[m[32m    <ProjectConfiguration Include="Debug|Win32">[m
[32m+[m[32m      <Configuration>Debug</Configuration>[m
[32m+[m[32m      <Platform>Win32</Platform>[m
[32m+[m[32m    </ProjectConfiguration>[m
[32m+[m[32m    <ProjectConfiguration Include="Release|Win32">[m
[32m+[m[32m      <Configuration>Release</Configuration>[m
[32m+[m[32m      <Platform>Win32</Platform>[m
[32m+[m[32m    </ProjectConfiguration>[m
[32m+[m[32m    <ProjectConfiguration Include="Debug|x64">[m
[32m+[m[32m      <Configuration>Debug</Configuration>[m
[32m+[m[32m      <Platform>x64</Platform>[m
[32m+[m[32m    </ProjectConfiguration>[m
[32m+[m[32m    <ProjectConfiguration Include="Release|x64">[m
[32m+[m[32m      <Configuration>Release</Configuration>[m
[32m+[m[32m      <Platform>x64</Platform>[m
[32m+[m[32m    </ProjectConfiguration>[m
[32m+[m[32m  </ItemGroup>[m
[32m+[m[32m  <PropertyGroup Label="Globals">[m
[32m+[m[32m    <ProjectGuid>{4AF5AEF4-B0CE-4AB4-A0B0-C830C3B2FD87}</ProjectGuid>[m
[32m+[m[32m    <RootNamespace>viewer</RootNamespace>[m
[32m+[m[32m    <WindowsTargetPlatformVersion>8.1</WindowsTargetPlatformVersion>[m
[32m+[m[32m  </PropertyGroup>[m
[32m+[m[32m  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />[m
[32m+[m[32m  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">[m
[32m+[m[32m    <ConfigurationType>Application</ConfigurationType>[m
[32m+[m[32m    <UseDebugLibraries>true</UseDebugLibraries>[m
[32m+[m[32m    <PlatformToolset>v140</PlatformToolset>[m
[32m+[m[32m    <CharacterSet>MultiByte</CharacterSet>[m
[32m+[m[32m  </PropertyGroup>[m
[32m+[m[32m  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">[m
[32m+[m[32m    <ConfigurationType>Application</ConfigurationType>[m
[32m+[m[32m    <UseDebugLibraries>false</UseDebugLibraries>[m
[32m+[m[32m    <PlatformToolset>v140</PlatformToolset>[m
[32m+[m[32m    <WholeProgramOptimization>true</WholeProgramOptimization>[m
[32m+[m[32m    <CharacterSet>MultiByte</CharacterSet>[m
[32m+[m[32m  </PropertyGroup>[m
[32m+[m[32m  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">[m
[32m+[m[32m    <ConfigurationType>Application</ConfigurationType>[m
[32m+[m[32m    <UseDebugLibraries>true</UseDebugLibraries>[m
[32m+[m[32m    <PlatformToolset>v140</PlatformToolset>[m
[32m+[m[32m    <CharacterSet>MultiByte</CharacterSet>[m
[32m+[m[32m  </PropertyGroup>[m
[32m+[m[32m  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">[m
[32m+[m[32m    <ConfigurationType>Application</ConfigurationType>[m
[32m+[m[32m    <UseDebugLibraries>false</UseDebugLibraries>[m
[32m+[m[32m    <PlatformToolset>v140</PlatformToolset>[m
[32m+[m[32m    <WholeProgramOptimization>true</WholeProgramOptimization>[m
[32m+[m[32m    <CharacterSet>MultiByte</CharacterSet>[m
[32m+[m[32m  </PropertyGroup>[m
[32m+[m[32m  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />[m
[32m+[m[32m  <ImportGroup Label="ExtensionSettings">[m
[32m+[m[32m  </ImportGroup>[m
[32m+[m[32m  <ImportGroup Label="Shared">[m
[32m+[m[32m  </ImportGroup>[m
[32m+[m[32m  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">[m
[32m+[m[32m    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />[m
[32m+[m[32m  </ImportGroup>[m
[32m+[m[32m  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">[m
[32m+[m[32m    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />[m
[32m+[m[32m  </ImportGroup>[m
[32m+[m[32m  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">[m
[32m+[m[32m    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />[m
[32m+[m[32m  </ImportGroup>[m
[32m+[m[32m  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|x64'">[m
[32m+[m[32m    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />[m
[32m+[m[32m  </ImportGroup>[m
[32m+[m[32m  <PropertyGroup Label="UserMacros" />[m
[32m+[m[32m  <PropertyGroup />[m
[32m+[m[32m  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">[m
[32m+[m[32m    <ClCompile>[m
[32m+[m[32m      <WarningLevel>Level3</WarningLevel>[m
[32m+[m[32m      <Optimization>Disabled</Optimization>[m
[32m+[m[32m      <SDLCheck>true</SDLCheck>[m
[32m+[m[32m    </ClCompile>[m
[32m+[m[32m    <Link>[m
[32m+[m[32m      <GenerateDebugInformation>true</GenerateDebugInformation>[m
[32m+[m[32m    </Link>[m
[32m+[m[32m  </ItemDefinitionGroup>[m
[32m+[m[32m  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">[m
[32m+[m[32m    <ClCompile>[m
[32m+[m[32m      <WarningLevel>Level3</WarningLevel>[m
[32m+[m[32m      <Optimization>Disabled</Optimization>[m
[32m+[m[32m      <SDLCheck>true</SDLCheck>[m
[32m+[m[32m      <AdditionalIncludeDirectories>C:\SFML-Visual_Studio2015RCx64\include;C:\Program Files\VisualStudio2015\SFML-2.3.2\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>[m
[32m+[m[32m      <PreprocessorDefinitions>SFML_DYNAMIC;_MBCS;%(PreprocessorDefinitions)</PreprocessorDefinitions>[m
[32m+[m[32m    </ClCompile>[m
[32m+[m[32m    <Link>[m
[32m+[m[32m      <GenerateDebugInformation>true</GenerateDebugInformation>[m
[32m+[m[32m      <AdditionalLibraryDirectories>C:\SFML-Visual_Studio2015RCx64\lib;C:\Program Files\VisualStudio2015\SFML-2.3.2\lib;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>[m
[32m+[m[32m      <AdditionalDependencies>sfml-graphics-d.lib;sfml-window-d.lib;sfml-system-d.lib;sfml-audio-d.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;comdlg32.lib;advapi32.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;odbc32.lib;odbccp32.lib;%(AdditionalDependencies)</AdditionalDependencies>[m
[32m+[m[32m    </Link>[m
[32m+[m[32m  </ItemDefinitionGroup>[m
[32m+[m[32m  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">[m
[32m+[m[32m    <ClCompile>[m
[32m+[m[32m      <WarningLevel>Level3</WarningLevel>[m
[32m+[m[32m      <Optimization>MaxSpeed</Optimization>[m
[32m+[m[32m      <FunctionLevelLinking>true</FunctionLevelLinking>[m
[32m+[m[32m      <IntrinsicFunctions>true</IntrinsicFunctions>[m
[32m+[m[32m      <SDLCheck>true</SDLCheck>[m
[32m+[m[32m    </ClCompile>[m
[32m+[m[32m    <Link>[m
[32m+[m[32m      <GenerateDebugInformation>true</GenerateDebugInformation>[m
[32m+[m[32m      <EnableCOMDATFolding>true</EnableCOMDATFolding>[m
[32m+[m[32m      <OptimizeReferences>true</OptimizeReferences>[m
[32m+[m[32m    </Link>[m
[32m+[m[32m  </ItemDefinitionGroup>[m
[32m+[m[32m  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">[m
[32m+[m[32m    <ClCompile>[m
[32m+[m[32m      <WarningLevel>Level3</WarningLevel>[m
[32m+[m[32m      <Optimization>MaxSpeed</Optimization>[m
[32m+[m[32m      <FunctionLevelLinking>true</FunctionLevelLinking>[m
[32m+[m[32m      <IntrinsicFunctions>true</IntrinsicFunctions>[m
[32m+[m[32m      <SDLCheck>true</SDLCheck>[m
[32m+[m[32m    </ClCompile>[m
[32m+[m[32m    <Link>[m
[32m+[m[32m      <GenerateDebugInformation>true</GenerateDebugInformation>[m
[32m+[m[32m      <EnableCOMDATFolding>true</EnableCOMDATFolding>[m
[32m+[m[32m      <OptimizeReferences>true</OptimizeReferences>[m
[32m+[m[32m    </Link>[m
[32m+[m[32m  </ItemDefinitionGroup>[m
[32m+[m[32m  <ItemGroup>[m
[32m+[m[32m    <ClCompile Include="disp.cpp" />[m
[32m+[m[32m    <ClCompile Include="files.cpp" />[m
[32m+[m[32m    <ClCompile Include="init.cpp" />[m
[32m+[m[32m    <ClCompile Include="main.cpp">[m
[32m+[m[32m      <AdditionalIncludeDirectories Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\Program Files\VisualStudio2015\SFML-2.3.2\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>[m
[32m+[m[32m    </ClCompile>[m
[32m+[m[32m  </ItemGroup>[m
[32m+[m[32m  <ItemGroup>[m
[32m+[m[32m    <ClInclude Include="disp.h" />[m
[32m+[m[32m    <ClInclude Include="files.h" />[m
[32m+[m[32m    <ClInclude Include="init.h" />[m
[32m+[m[32m  </ItemGroup>[m
[32m+[m[32m  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />[m
[32m+[m[32m  <ImportGroup Label="ExtensionTargets">[m
[32m+[m[32m  </ImportGroup>[m
[32m+[m[32m</Project>[m
\ No newline at end of file[m
